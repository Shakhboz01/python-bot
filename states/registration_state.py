from aiogram.fsm.state import State, StatesGroup
from aiogram import Router
from aiogram.types import Message
from aiogram.fsm.context import FSMContext
from database import add_user, CYRILLIC_NAME_REGEX, PHONE_REGEX
from keyboards.keyboards import main_menu

class RegistrationState(StatesGroup):
    full_name = State()
    phone_number = State()

router = Router()
@router.message(RegistrationState.full_name)
async def process_full_name_registration(message: Message, state: FSMContext) -> None:
    if not CYRILLIC_NAME_REGEX.match(message.text):
        await message.answer('‚õîüëë –ò–º—è –∏ –§–∞–º–∏–ª–∏—è –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤–≤–µ–¥–µ–Ω—ã —á–µ—Ä–µ–∑ –æ–¥–∏–Ω –ø—Ä–æ–±–µ–ª, –∏ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –Ω–∞–ø–∏—Å–∞–Ω—ã —á–µ—Ä–µ–∑ –∫–∏—Ä–∏–ª–ª–∏—Ü—É. –¢–∞–∫–∂–µ –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –∑–∞–≥–ª–∞–≤–Ω—ã–µ –±—É–∫–≤—ã. –£—á—Ç–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:')
        return
    await state.update_data(full_name = message.text)
    await state.set_state(RegistrationState.phone_number)
    await message.answer('Now, share your phone number')

@router.message(RegistrationState.phone_number)
async def process_phone_number_registration(message: Message, state: FSMContext) -> None:
    if not PHONE_REGEX.match(message.text):
        await message.answer('‚õîüëë‚õî –ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å 11 —Ü–∏—Ñ—Ä –∏ –¥–æ–ª–∂–µ–Ω –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å –≤ –Ω–∞—á–∞–ª–µ +7. –£—á—Ç–∏—Ç–µ —Ñ–æ—Ä–º–∞—Ç –∏ –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞:')
        return
    await state.update_data(phone_number = message.text)
    await state.set_state(RegistrationState.phone_number)
    data = await state.get_data()
    await add_user(message.from_user.id, data['full_name'], data['phone_number'])
    await state.clear()
    await message.answer("‚úÖ Registration completed!", reply_markup=main_menu())
